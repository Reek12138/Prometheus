<?xml version="1.0"?>
<robot name="xsugv_c6_ros" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:arg name="robot_namespace" default="$(optenv ROBOT_NAMESPACE /)" />
  <xacro:arg name="aruco" default="" />

  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find xsugv_description)/urdf/decorations.urdf.xacro" />
  <xacro:include filename="$(find xsugv_description)/urdf/right_wheel.urdf.xacro" />
  <xacro:include filename="$(find xsugv_description)/urdf/left_wheel.urdf.xacro" />
  <xacro:include filename="$(find xsugv_description)/urdf/accessories/sonar.urdf.xacro"/>
  <xacro:include filename="$(find xsugv_description)/urdf/accessories/sonar_channel.urdf.xacro" />
  <xacro:include filename="$(find xsugv_description)/urdf/accessories/rslidar_32b.urdf.xacro"/>
  <xacro:include filename="$(find xsugv_description)/urdf/accessories/intel_realsense.urdf.xacro"/>
  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro" />

  <xacro:property name="M_PI" value="3.14159"/>

  <!-- Base Size -->
  <xacro:property name="base_x_size" value="0.98740000" />
  <xacro:property name="base_y_size" value="0.57090000" />
  <xacro:property name="base_z_size" value="0.34750000" />

  <!-- Wheel Mounting Positions -->
  <xacro:property name="wheelbase" value="0.482" />
  <xacro:property name="wheel_vertical_offset" value="0.0" />

  <!-- Wheel Properties -->
  <xacro:property name="wheel_length" value="0.1" />
  <xacro:property name="wheel_radius" value="0.1" />

  <!-- Base link is the center of the robot's bottom plate -->
  <link name="base_link">
    <visual>
      <material name="red"/>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://xsugv_description/meshes/base_link.stl" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 ${base_z_size/4}" rpy="0 0 0" />
      <geometry>
        <box size="${ base_x_size } ${base_y_size} ${base_z_size/2}"/>
      </geometry>
    </collision>
    <collision>
      <origin xyz="0 0 ${base_z_size*3/4-0.01}" rpy="0 0 0" />
      <geometry>
        <box size="${base_x_size*4/5} ${base_y_size} ${base_z_size/2-0.02}"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_vertical_offset - wheel_radius}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="base_footprint" />
  </joint>

  <!-- Inertial link stores the robot's inertial information -->
  <link name="inertial_link">
    <inertial>
      <mass value="46.034" />
      <origin xyz="-0.00065 -0.085 0.062" />
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" />
    </inertial>
  </link>
  <joint name="inertial_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="inertial_link" />
  </joint>

  <link name="gan_link">  
    <visual>    
      <material name="medium_grey"/>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://xsugv_description/meshes/gan.stl" />
      </geometry>
    </visual>
  </link>
  <joint name="gan_joint" type="fixed">
    <origin xyz="0.0 0.0 0.218" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="gan_link" />
  </joint>
  <gazebo reference="gan_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <link name="plane_link">  
    <visual>    
      <material name="blue"/>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://xsugv_description/meshes/plane.stl" />
      </geometry>
    </visual>
  </link>
  <joint name="plane_joint" type="fixed">
    <origin xyz="-0.003 0.0 0.011" rpy="0 0 0" />
    <parent link="gan_link" />
    <child link="plane_link" />
  </joint>
  <gazebo reference="plane_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- <link name="parking_apron_link">
    <visual>
      <material name="black"/>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://xsugv_description/meshes/parking_apron.stl" />
      </geometry>
    </visual>
  </link>
  <joint name="parking_apron_joint" type="fixed">
    <origin xyz="0.012 0 0.486" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="parking_apron_link" />
  </joint>
  <gazebo reference="parking_apron_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <xacro:unless value="${'x$(arg aruco)' == 'x'}">
    <link name="landing_pad_link">
      <visual>
        <material name="white"/>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://xsugv_description/meshes/accessories/$(arg aruco).dae" />
        </geometry>
      </visual>
    </link>
    <joint name="landing_pad_joint" type="fixed">
      <origin xyz="0.03 0 0.02" rpy="0 0 0" />
      <parent link="parking_apron_link" />
      <child link="landing_pad_link" />
    </joint>
  </xacro:unless> -->

  <link name="imu_link">  
    <visual>    
      <material name="black"/>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://xsugv_description/meshes/accessories/imu.stl" />
      </geometry>
    </visual>
  </link>
  <joint name="imu_joint" type="fixed">
    <origin xyz="$(optenv XSUGV_IMU_XYZ 0.256 0 0.09)" rpy="$(optenv XSUGV_IMU_RPY 0 0 0)" />
    <parent link="base_link" />
    <child link="imu_link" />
  </joint>
  <gazebo reference="imu_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <link name="gps_link">  
    <visual>    
      <material name="black"/>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://xsugv_description/meshes/accessories/gps.stl" />
      </geometry>
    </visual>
  </link>
  <joint name="gps_joint" type="fixed">
    <origin xyz="0.337 -0.126 0.403" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="gps_link" />
  </joint>
  <gazebo reference="gps_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- xsugv wheel macros -->
  <xacro:xsugv_left_wheel wheel_prefix="front_left">
    <origin xyz="0.24 ${wheelbase/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:xsugv_left_wheel>
  <xacro:xsugv_right_wheel wheel_prefix="front_right">
    <origin xyz="0.24 ${-wheelbase/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:xsugv_right_wheel>
  <xacro:xsugv_left_wheel wheel_prefix="middle_left">
    <origin xyz="0.0 ${wheelbase/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:xsugv_left_wheel>
  <xacro:xsugv_right_wheel wheel_prefix="middle_right">
    <origin xyz="0.0 ${-wheelbase/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:xsugv_right_wheel>
  <xacro:xsugv_left_wheel wheel_prefix="rear_left">
    <origin xyz="-0.24 ${wheelbase/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:xsugv_left_wheel>
  <xacro:xsugv_right_wheel wheel_prefix="rear_right">
    <origin xyz="-0.24 ${-wheelbase/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:xsugv_right_wheel>

  <xacro:xsugv_sonar>
    <origin xyz="0 0 0.19" rpy="0 0 0" />
  </xacro:xsugv_sonar>

  <xacro:xsugv_sonar_channel channel="0">
    <origin xyz="-0.233 -0.22 0.19" rpy="0 0 ${-M_PI/2}" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="1">
    <origin xyz="0 -0.22 0.19" rpy="0 0 ${-M_PI/2}" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="2">
    <origin xyz="0.233 -0.22 0.19" rpy="0 0 ${-M_PI/2}" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="3">
    <origin xyz="0.335 -0.122 0.19" rpy="0 0 0" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="4">
    <origin xyz="0.335 0 0.19" rpy="0 0 0" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="5">
    <origin xyz="0.335 0.122 0.19" rpy="0 0 0" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="6">
    <origin xyz="0.233 0.22 0.19" rpy="0 0 ${M_PI/2}" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="7">
    <origin xyz="0 0.22 0.19" rpy="0 0 ${M_PI/2}" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="8">
    <origin xyz="-0.233 0.22 0.19" rpy="0 0 ${M_PI/2}" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="9">
    <origin xyz="-0.335 0.122 0.19" rpy="0 0 ${M_PI}" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="10">
    <origin xyz="-0.335 0 0.19" rpy="0 0 ${M_PI}" />
  </xacro:xsugv_sonar_channel>
  <xacro:xsugv_sonar_channel channel="11">
    <origin xyz="-0.335 -0.122 0.19" rpy="0 0 ${M_PI}" />
  </xacro:xsugv_sonar_channel>

  <xacro:xsugv_decorate />

  <!-- add the intel realsense -->
  <link name="realsense_mountpoint"/>
  <joint name="realsense_mountpoint_joint" type="fixed">
    <origin xyz="0.398 0 0.365" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="realsense_mountpoint" />
  </joint>
  <xacro:intel_realsense_mount prefix="camera" topic="realsense" parent_link="realsense_mountpoint"/>

  <link name="rslidar">
    <visual>
      <material name="purple"/>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://xsugv_description/meshes/accessories/rslidar_32b.stl" />
      </geometry>
    </visual>
  </link>
  <joint name="lidar_mountpoint_joint" type="fixed">
    <origin xyz="0.332 0 0.43" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="rslidar" />
  </joint>
  <gazebo reference="rslidar">
    <material>Gazebo/Purple</material>
  </gazebo>

  <!--
    Add the 3d laser
  -->
<!--
  <xacro:VLP-16 parent="rslidar">
    <origin xyz="0 0 0"/>
  </xacro:VLP-16>
  
-->
<!--
  <xacro:rslidar_32b>
    <origin xyz="0.44 0 0.534"/>
  </xacro:rslidar_32b>
-->
<xacro:VLP-16 parent="rslidar" name="velodyne" topic="/velodyne_points" hz="10" samples="360" gpu="false" min_angle="-1.57" max_angle="1.57" min_range="0.1">
  <origin xyz="0 0 0" rpy="0 0 0"/>
</xacro:VLP-16>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>imu_link</frameId>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
      <xyzOffset>$(optenv XSUGV_IMU_XYZ 0.314 0 0.19)</xyzOffset>
      <rpyOffset>$(optenv XSUGV_IMU_RPY 0 0 0)</rpyOffset>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>20</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>gps_link</frameId>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <referenceLatitude>28.28</referenceLatitude>
      <referenceLongitude>112.28</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>

</robot>
