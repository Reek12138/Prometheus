<launch>
	<!-- 启动MAVROS -->
	<!-- 不同机载电脑,注意修改fcu_url至正确的端口号及波特率 -->
	<node pkg="mavros" type="mavros_node" name="mavros" output="screen">
		<param name="fcu_url" value="/dev/ttyUSB0:921600" />
		<param name="gcs_url" value="" />
		<param name="target_system_id" value="1" />
		<param name="target_component_id" value="1" />
		<rosparam command="load" file="$(find prometheus_experiment)/launch_custom/001_HTWY/config/px4_pluginlists.yaml" />
		<rosparam command="load" file="$(find prometheus_experiment)/launch_custom/001_HTWY/config/px4_config.yaml" />
	</node>

	<!-- 启动Prometheus代码 -->
	<!-- run the px4_pos_estimator.cpp -->
	<node pkg="prometheus_control" type="px4_pos_estimator" name="px4_pos_estimator" output="screen">
		<!-- 0 for vicon， 1 for 激光SLAM, 2 for gazebo ground truth(仿真用) -->
		<param name="input_source" value="0" />
	</node>
	
	<!-- run the px4_pos_controller.cpp -->
	<node pkg="prometheus_control" type="px4_pos_controller" name="px4_pos_controller" output="screen">
		<rosparam command="load" file="$(find prometheus_experiment)/launch_custom/001_HTWY/config/px4_pos_controller.yaml"/>
	</node>
	
	<!-- run the ground_station.cpp -->
	<node pkg="prometheus_control" type="ground_station" name="ground_station" output="screen" launch-prefix="gnome-terminal --tab --">	
	</node>
  <!-- vrpn -->
	<include file="$(find vrpn_client_ros)/launch/sample.launch" launch-prefix="gnome-terminal --tab --">
		<arg name="server" value="192.168.1.2"/>
	</include>
	<!-- run the ground_station_msg.cpp -->
	<node pkg="prometheus_control" type="ground_station_msg" name="ground_station_msg" output="screen" launch-prefix="gnome-terminal --tab --">	
	</node>

	<!-- 设定局部点云话题-->
	<arg name="topic_of_local_pcl" default="/prometheus/sensors/2Dlidar_scan"/>
	<!-- 启动局部规划算法 -->
	<node pkg="prometheus_local_planning" name="local_planner_main" type="local_planner_main" output="screen">
		<remap from="/prometheus/planning/local_pcl" to="$(arg topic_of_local_pcl)" />
		<!-- 参数 -->
		<!-- 最大速度，设的越小越安全 -->
		<param name="planning/max_planning_vel" value="0.25" type="double"/>
		<!-- 选择算法 0代表APF,1代表VFH -->
		<param name="planning/algorithm_mode" value="0" type="int"/>
		<!-- 激光雷达类型 -->
		<param name="planning/lidar_model" value="1" type="int"/>
		<!-- 膨胀参数，一般设置为无人机的半径或更大 -->
		<param name="apf/inflate_distance" value="0.3" type="double"/>
		<!-- 感知距离，只考虑感知距离内的障碍物 -->
		<param name="apf/obs_distance" value="1.0" type="double"/>  
		<!-- 增益 -->
		<param name="apf/k_push" value="2.0" type="double"/>
		<param name="apf/k_att" value="1.0" type="double"/>
		<!-- 安全距离，距离障碍物在安全距离内，k_push自动增大 -->
		<param name="apf/min_dist" value="0.2" type="double"/>
		<!-- 最大吸引距离 -->
		<param name="apf/max_att_dist" value="5" type="double"/>
		<!-- 地面高度，不考虑低于地面高度的障碍物 -->
		<param name="apf/ground_height" value="0.3" type="double"/>
		<!-- 地面安全高度，小于该高度，会产生向上推力 -->
		<param name="apf/ground_safe_height" value="0.3" type="double"/>
		<!-- 停止距离，小于该距离，停止自动飞行 -->
		<param name="apf/safe_distance" value="0.1" type="double"/>
	</node>	

	<!-- 启动规划mission， 激光输入control_yaw_flag设为false，rgbd输入control_yaw_flag设为true -->
	<node pkg="prometheus_mission" type="planning_mission" name="planning_mission" output="screen" launch-prefix="gnome-terminal --">	
		<param name="planning_mission/control_yaw_flag" value="false" type="bool"/>
	</node>

	<!-- 启动rviz,设为false可关闭 -->
	<arg name="visualization" default="false"/>
	<group if="$(arg visualization)">
        <node type="rviz" name="rviz" pkg="rviz" args="-d $(find prometheus_experiment)/launch_custom/001_HTWY/config/rviz_config.rviz" />
    </group>
</launch>
